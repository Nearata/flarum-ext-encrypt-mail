{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,wBCL/C,SAASC,EAAgBb,EAAGc,GAKzC,OAJAD,EAAkBZ,OAAOc,eAAiBd,OAAOc,eAAeC,OAAS,SAAyBhB,EAAGc,GAEnG,OADAd,EAAEiB,UAAYH,EACPd,CACR,EACMa,EAAgBb,EAAGc,EAC3B,C,OCND,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,a,aCOnCC,EAAAA,SAAAA,GCNN,IAAwBC,EAAUC,E,wIDO/CC,aAAAA,E,EACAC,aAAAA,E,ECR+CF,E,GAAVD,E,GAC5Bf,UAAYN,OAAOyB,OAAOH,EAAWhB,WAC9Ce,EAASf,UAAUoB,YAAcL,EACjCP,EAAeO,EAAUC,G,2BDOzBK,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEbC,KAAKN,SAAU,EACfM,KAAKL,QAAUM,IACbC,IAAAA,QAAAA,KAAAA,UAA4B,+BAE/B,E,EAEDC,SAAA,SAASJ,GACP,YAAMI,SAAN,UAAeJ,EAChB,E,EAEDK,KAAA,SAAKL,GACH,IAAMM,EAAQH,IAAAA,WAAAA,MACZ,mDAGF,OACE,EAAC,IAAD,CAAUI,UAAU,uCAAuCD,MAAOA,GAChE,cACEE,MAAM,cACNC,KAAK,KACLC,aAAa,MACbC,KAAMV,KAAKL,UAEb,EAAC,IAAD,CACEW,UAAU,yBACVK,KAAK,SACLC,QAASZ,KAAKa,SAAS3B,KAAKc,MAC5BN,QAASM,KAAKN,SAEbQ,IAAAA,WAAAA,MACC,qDAKT,E,EAEDW,SAAA,SAASC,GACP,IAAMC,EAAab,IAAAA,QAAAA,KAAAA,UACjB,+BAGEF,KAAKL,YAAcoB,IAIvBf,KAAKN,SAAU,EAEfQ,IAAAA,QACW,CACPc,IACEd,IAAAA,MAAAA,UAAoB,UACpB,uCACFe,OAAQ,OACRC,KAAM,CAAEC,UAAWnB,KAAKL,aAEzByB,MAAK,kBAAMC,SAASC,QAAf,IACT,E,EAhEkB/B,CAA0BgC,KEP/C,MAAM,EAA+BnC,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCKxDY,IAAAA,aAAAA,IAAqB,wBAAwB,YAC3CsB,EAAAA,EAAAA,QAAOC,IAAAA,UAAwB,iBAAiB,SAAUC,GACxDA,EAAMC,IAAI,8BAA+BpC,EAAkBqC,YAC5D,GACF,G","sources":["webpack://@nearata/flarum-ext-encrypt-mail/webpack/bootstrap","webpack://@nearata/flarum-ext-encrypt-mail/webpack/runtime/compat get default export","webpack://@nearata/flarum-ext-encrypt-mail/webpack/runtime/define property getters","webpack://@nearata/flarum-ext-encrypt-mail/webpack/runtime/hasOwnProperty shorthand","webpack://@nearata/flarum-ext-encrypt-mail/webpack/runtime/make namespace object","webpack://@nearata/flarum-ext-encrypt-mail/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['common/Component']\"","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['common/components/Button']\"","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['forum/app']\"","webpack://@nearata/flarum-ext-encrypt-mail/./src/forum/components/SettingsPublicKey.tsx","webpack://@nearata/flarum-ext-encrypt-mail/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['common/extend']\"","webpack://@nearata/flarum-ext-encrypt-mail/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@nearata/flarum-ext-encrypt-mail/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import Component from \"flarum/common/Component\";\nimport Button from \"flarum/common/components/Button\";\nimport FieldSet from \"flarum/common/components/FieldSet\";\nimport Stream from \"flarum/common/utils/Stream\";\nimport app from \"flarum/forum/app\";\nimport type Mithril from \"mithril\";\n\nexport default class SettingsPublicKey extends Component {\n  loading!: boolean;\n  content!: Stream<string>;\n\n  oninit(vnode: Mithril.Vnode<this>): void {\n    super.oninit(vnode);\n\n    this.loading = false;\n    this.content = Stream(\n      app.session.user!.attribute(\"nearataEncryptMailPublicKey\")\n    );\n  }\n\n  oncreate(vnode: Mithril.VnodeDOM<this>): void {\n    super.oncreate(vnode);\n  }\n\n  view(vnode: Mithril.Vnode<this>) {\n    const label = app.translator.trans(\n      \"nearata-encrypt-mail.forum.settings.field_label\"\n    );\n\n    return (\n      <FieldSet className=\"Settings-nearataEncryptMailPublicKey\" label={label}>\n        <textarea\n          class=\"FormControl\"\n          rows=\"10\"\n          autocomplete=\"off\"\n          bidi={this.content}\n        ></textarea>\n        <Button\n          className=\"Button Button--primary\"\n          type=\"submit\"\n          onclick={this.onSubmit.bind(this)}\n          loading={this.loading}\n        >\n          {app.translator.trans(\n            \"nearata-encrypt-mail.forum.settings.save_changes\"\n          )}\n        </Button>\n      </FieldSet>\n    );\n  }\n\n  onSubmit(event: PointerEvent): void {\n    const oldContent = app.session.user!.attribute(\n      \"nearataEncryptMailPublicKey\"\n    );\n\n    if (this.content() === oldContent) {\n      return;\n    }\n\n    this.loading = true;\n\n    app\n      .request({\n        url:\n          app.forum.attribute(\"apiUrl\") +\n          \"/nearata/encryptMail/updatePublicKey\",\n        method: \"POST\",\n        body: { publicKey: this.content() },\n      })\n      .then(() => location.reload());\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","import SettingsPublicKey from \"./components/SettingsPublicKey\";\nimport { extend } from \"flarum/common/extend\";\nimport app from \"flarum/forum/app\";\nimport SettingsPage from \"flarum/forum/components/SettingsPage\";\n\napp.initializers.add(\"nearata-encrypt-mail\", () => {\n  extend(SettingsPage.prototype, \"settingsItems\", function (items) {\n    items.add(\"nearataEncryptMailPublicKey\", SettingsPublicKey.component());\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","flarum","core","compat","SettingsPublicKey","subClass","superClass","loading","content","create","constructor","oninit","vnode","this","Stream","app","oncreate","view","label","className","class","rows","autocomplete","bidi","type","onclick","onSubmit","event","oldContent","url","method","body","publicKey","then","location","reload","Component","extend","SettingsPage","items","add","component"],"sourceRoot":""}